# Use a modern base image
FROM python:3.11-slim

# Set environment variables
ENV DJANGO_ENV=production \
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  POETRY_VERSION=1.2.2 \
  POETRY_VIRTUALENVS_IN_PROJECT=true \
  POETRY_VIRTUALENVS_CREATE=true

# Install dependencies
RUN apt-get update \
  && apt-get install --no-install-recommends -y \
    bash \
    build-essential \
    curl \
    gettext \
    git \
    libpq-dev \
    wget \
  && apt-get autoremove -y && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="${PATH}:/root/.local/bin"

# Set the working directory
WORKDIR /app

# Copy dependency files first for caching
COPY pyproject.toml poetry.lock /app/

# Install Python dependencies
RUN poetry install --no-dev --no-interaction --no-root

# Copy the rest of the application code
COPY . /app

# Set ownership and permissions
RUN chown -R docker:docker /app

# Switch to a non-root user
USER docker

# Set the entrypoint
CMD ["gunicorn", "hx_requests_demo.wsgi:application", "--bind", "0.0.0.0:8001"]
